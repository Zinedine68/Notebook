/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * Assemblage de deux Tuyaux de diam?tre 8mm en T? * * * * //

convertToMeters 0.001; // coordonn?es en mm //





vertices
(
	(1 -1 0)
	(1 1 0)
	(-1 1 0)
	(-1 -1 0)  // square z=0
	(2.828 -2.828 0)
	(2.828 2.828 0)
	(-2.828 2.828 0)
	(-2.828 -2.828 0)  // z=0 // number 7
	(1 -1 40)
	(1 1 40)
	(-1 1 40)
	(-1 -1 40)  // square z=40
	(2.828 -2.828 40)
	(2.828 2.828 40)
	(-2.828 2.828 40)
	(-2.828 -2.828 40)  // z=40 // number 7+8=15
);

 edges
(

arc 4 5 (4 0 0)
arc 5 6 (0 4 0)
arc 6 7 (-4 0 0)
arc 7 4 (0 -4 0)

arc 12 13 (4 0 40)
arc 13 14 (0 4 40)
arc 14 15 (-4 0 40)
arc 15 12 (0 -4 40)

);

blocks
(
	hex (3 0 1 2 11 8 9 10) (3 3 20) simpleGrading (1 1 1)
	hex (0 4 5 1 8 12 13 9) (5 3 20) simpleGrading (0.3333 1 1)
	hex (2 1 5 6 10 9 13 14) (3 5 20) simpleGrading (1 0.333 1)
	hex (7 3 2 6 15 11 10 14) (5 3 20) simpleGrading (3 1 1)
	hex (7 4 0 3 15 12 8 11) (3 5 20) simpleGrading (1 3 1)
);


boundary
(
   
    wall
    {
        type wall;
        faces
        (
			(4 12 13 5)
			(5 13 14 6)
			(6 14 15 7)
			(7 15 12 4)
		);
    }

	inlet0
	{
		type cyclic;
        neighbourPatch outlet0;
		faces
		(
			(0 4 5 1)
		);
	}
	outlet0
	{
		type cyclic;
        neighbourPatch inlet0;
		faces
		(
			(8 12 13 9)
		);
	}

	inlet1
	{
		type cyclic;
        neighbourPatch outlet1;
		faces
		(
			(2 1 5 6)
		);
	}
	outlet1
	{
		type cyclic;
        neighbourPatch inlet1;
		faces
		(
			(10 9 13 14)
		);
	}

	inlet2
	{
		type cyclic;
        neighbourPatch outlet2;
		faces
		(
			(7 3 2 6)
		);
	}
	outlet2
	{
		type cyclic;
        neighbourPatch inlet2;
		faces
		(
			(15 11 10 14)
		);
	}

	inlet3
	{
		type cyclic;
        neighbourPatch outlet3;
		faces
		(
			(7 4 0 3)
		);
	}
	outlet3
	{
		type cyclic;
        neighbourPatch inlet3;
		faces
		(
			(15 12 8 11)
		);
	}

	inlet4
	{
		type cyclic;
        neighbourPatch outlet4;
		faces
		(
			(0 1 2 3)
		);
	}
	outlet4
	{
		type cyclic;
        neighbourPatch inlet4;
		faces
		(
			(8 9 10 11)
		);
	}
	
	
	
);

mergePatchPairs
(
);

// ************************************************************************* //
